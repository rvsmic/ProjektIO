//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Wykladowca.cpp
//  @ Date : 24.05.2023
//  @ Author :
//
//


#include "Wykladowca.h"

Wykladowca::Wykladowca(string login, string haslo, string identyfikator) {
    cout << "Stworzono obiekt klasy " << "Wykladowca!\n";
    this->login = login;
    this->haslo = haslo;
    this->identyfikator = identyfikator;
    this->czyStudent = false;
}

Wykladowca::~Wykladowca() {
    for(auto x = przedmioty.begin(); x != przedmioty.end(); x++){
        delete (*x);
    }

    cout << "Usunieto obiekt klasy " << "Wykladowca!\n";
}

void Wykladowca::setIdentyfikator(string identyfikator) {
    this->identyfikator = identyfikator;
}

string Wykladowca::getIdentyfikator() {
    return this->identyfikator;
}

void Wykladowca::dodajPrzedmiot(string nazwa) {
    Przedmiot* przedmiot = new Przedmiot(nazwa, this);
    this->przedmioty.push_back(przedmiot);
}

void Wykladowca::usunPrzedmiot(Przedmiot* przedmiot) {
    for(auto student: *(przedmiot->getStudenci())) {
        usunStudentaZPrzedmiotu(przedmiot,student);
    }
    for(auto x=przedmioty.begin();x!=przedmioty.end();++x) {
        if((*x) == przedmiot) {
            przedmioty.erase(x);
            break;
        }
    }

    delete przedmiot;
    cout<<"Pomyslnie usunieto przedmiot!\n";
}

void Wykladowca::dodajMaterial(Przedmiot* przedmiot, string link) {
    przedmiot->dodajMaterial(link);
}

void Wykladowca::usunMaterial(Przedmiot* przedmiot) {
    przedmiot->usunMaterial();
}

void Wykladowca::dodajOcene(Przedmiot* przedmiot, string nrAlbumu, int ocena) {
    Student* stud = przedmiot->znajdzStudenta(nrAlbumu);
    if(stud != nullptr){
        stud->dodajOcene(przedmiot, ocena);
    }
    cout<<"Pomyslnie dodano ocene "<<ocena<<" studentowi o nr. albumu "<<nrAlbumu<<"!\n";
}

void Wykladowca::usunOcene(Przedmiot* przedmiot, string nrAlbumu) {
    Student* stud = przedmiot->znajdzStudenta(nrAlbumu);
    if(stud != nullptr){
        stud->usunOcene(przedmiot);
    }
}

void Wykladowca::dodajStudentaDoPrzedmiotu(Przedmiot* przedmiot, Student* student){
    przedmiot->dodajStudenta(student);
    student->dodajOcene(przedmiot, -1);
    cout<<"Pomyslnie dodano studenta do przedmiotu!\n";
}

void Wykladowca::usunStudentaZPrzedmiotu(Przedmiot* przedmiot, Student* student){
    student->usunZPrzedmiotu(przedmiot);
    przedmiot->usunStudenta(student);
    cout<<"Pomyslnie usunieto studenta z przedmiotu!\n";

}

void Wykladowca::wyswietlPrzedmioty() {
    int i=0;
    for(auto x = przedmioty.begin(); x != przedmioty.end(); x++){
        cout<<"\t> "<<(*x)->getNazwa()<<"\n";
        ++i;
    }
    if(i==0) {
        cout<<"Brak prowadzonych przedmiotow w bazie danych!\n";
    }
}

vector <Przedmiot*>* Wykladowca::getPrzedmioty(){
    return &przedmioty;
}





